{"version":3,"sources":["myNavbar.jsx","home.jsx","reportWebVitals.js","index.js"],"names":["MyNavbar","Container","fluid","Row","Navbar","bg","variant","style","textAlign","Col","Nav","className","Link","href","NavDropdown","title","id","Item","md","Brand","Home","getWindowDimensions","window","width","innerWidth","height","innerHeight","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","fontSize","display","position","top","left","zIndex","Image","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAsDeA,EA9CE,WAEf,OACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,MAAO,CAACC,UAAW,UAAtD,UACE,cAACC,EAAA,EAAD,UACE,cAACR,EAAA,EAAD,UACE,eAACS,EAAA,EAAD,CAAKC,UAAU,yBAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,OAAf,kBACA,cAACH,EAAA,EAAIE,KAAL,CAAUC,KAAK,SAAf,mBACA,eAACC,EAAA,EAAD,CAAaC,MAAM,WAAWC,GAAG,0BAAjC,UACE,cAACF,EAAA,EAAYG,KAAb,CAAkBJ,KAAK,QAAvB,kCACA,cAACC,EAAA,EAAYG,KAAb,CAAkBJ,KAAK,mBAAvB,uCAKR,cAACJ,EAAA,EAAD,CAAKS,GAAI,EAAT,SACE,cAACd,EAAA,EAAOe,MAAR,CAAcN,KAAK,QAAnB,0BAEF,cAACJ,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,UAAU,yBAAf,UACE,cAACD,EAAA,EAAIO,KAAL,UACE,cAACP,EAAA,EAAIE,KAAL,CAAUC,KAAK,gCAAf,SACE,mBAAGF,UAAU,8BAGjB,cAACD,EAAA,EAAIO,KAAL,UACE,cAACP,EAAA,EAAIE,KAAL,CAAUC,KAAK,yCAAf,SACE,mBAAGF,UAAU,8BAGjB,cAACD,EAAA,EAAIO,KAAL,UACE,cAACP,EAAA,EAAIE,KAAL,CAAUC,KAAK,oCAAf,SACE,mBAAGF,UAAU,yC,QCIdS,EA1CF,WAGX,IAAMC,EAAsB,WAC1B,MAAmDC,OACnD,MAAO,CACLC,MAFF,EAAQC,WAGNC,OAHF,EAA2BC,cAsB7B,OACE,qCACE,cAAC,EAAD,IAjBwB,WAC1B,MAAgDC,mBAASN,KAAzD,mBAAMO,EAAN,KAAwBC,EAAxB,KAWA,OATAC,qBAAU,WACR,IAAMC,EAAe,WACnBF,EAAoBR,MAItB,OADAC,OAAOU,iBAAiB,SAAUD,GAC3B,kBAAMT,OAAOW,oBAAoB,SAAUF,MACjD,IAEIH,EAMHM,GAAsBX,MAAQ,KAC9B,mBAAGhB,MAAO,CAAE4B,SAAU,MAAMC,QAAS,SAAUC,SAAU,WAAYC,IAAK,OAAQC,KAAM,OAAQC,OAAQ,KAAxG,+CAEA,mBAAGjC,MAAO,CAAE6B,QAAS,SAAUC,SAAU,WAAYC,IAAK,OAAQC,KAAM,OAAQC,OAAQ,KAAxF,+CAEF,cAACC,EAAA,EAAD,CACEC,IAAI,eACJnB,MAAM,aC7BCoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3f4a1fea.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nconst MyNavbar = () => {\n\n  return (\n    <Container fluid>\n      <Row>\n      <Navbar bg=\"light\" variant=\"light\" style={{textAlign: \"center\"}}>\n        <Col>\n          <Container>\n            <Nav className=\"justify-content-center\">\n              <Nav.Link href=\"home\">Home</Nav.Link>\n              <Nav.Link href=\"#about\">About</Nav.Link>\n              <NavDropdown title=\"Projects\" id=\"navbarScrollingDropdown\">\n                <NavDropdown.Item href=\"#1rmc\">1 Rep Max Calculator</NavDropdown.Item>\n                <NavDropdown.Item href=\"#fitness_tracker\">Fitness Tracker</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Container>\n        </Col>\n        <Col md={2}>\n          <Navbar.Brand href=\"#home\">Chris Cruz</Navbar.Brand>\n        </Col>\n        <Col>\n          <Nav className=\"justify-content-center\">\n            <Nav.Item>\n              <Nav.Link href=\"mailto:chriscruz.1@icloud.com\">\n                <i className=\"far fa-envelope fa-lg\"></i>\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"http://www.linkedin.com/in/chriscruz-1\">\n                <i className=\"fab fa-linkedin fa-lg\"></i>\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"http://www.github.com/chriscruz-1\">\n                <i className=\"fab fa-github fa-lg\"></i>\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Col>\n        </Navbar>\n      </Row>\n    </Container>\n  );\n}\n\nexport default MyNavbar;","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyNarbar from './myNavbar';\nimport Image from 'react-bootstrap/Image'\n\nconst Home = () => {\n\n  //Reference for getting window size https://stackoverflow.com/questions/44480053/how-to-detect-if-screen-size-has-changed-to-mobile-in-react\n  const getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n  };\n\n  const useWindowDimensions = () => {\n    let [ windowDimensions, setWindowDimensions ] = useState(getWindowDimensions());\n\n    useEffect(() => {\n      const handleResize = () => {\n        setWindowDimensions(getWindowDimensions());\n      };\n  \n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n  }\n\n  return (\n    <>\n      <MyNarbar />\n      {(useWindowDimensions().width > 1100) ? \n        <p style={{ fontSize: \"2em\",display: \"inline\", position: \"relative\", top: \"10em\", left: \"10em\", zIndex: \"2\"}}>Web developer. Explorer. Learner.</p>\n        :\n        <p style={{ display: \"inline\", position: \"relative\", top: \"10em\", left: \"10em\", zIndex: \"2\"}}>Web developer. Explorer. Learner.</p>\n      }\n      <Image\n        src=\"explorer.png\"\n        width=\"100%\"\n      />\n    </>\n  );\n}\n\nexport default Home;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './home';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}